// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorldCareCenter.Api.Models;

#nullable disable

namespace WorldCareCenter.Api.Migrations
{
    [DbContext(typeof(LahtiDBContext))]
    [Migration("20241114063827_Doc-Data-Lah")]
    partial class DocDataLah
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("WorldCareCenter.Api.Entities.Doctor", b =>
                {
                    b.Property<int>("DoctorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DoctorID");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DoctorID = 1,
                            Email = "john.doe@email.com",
                            Name = "John Doe",
                            Specialty = "Neurologist"
                        },
                        new
                        {
                            DoctorID = 2,
                            Email = "smith.bruce@email.com",
                            Name = "Smith Bruce",
                            Specialty = "Psychiatrist"
                        },
                        new
                        {
                            DoctorID = 3,
                            Email = "peter.dam@email.com",
                            Name = "Peter Dam",
                            Specialty = "General Physician"
                        },
                        new
                        {
                            DoctorID = 4,
                            Email = "willaim.john@email.com",
                            Name = "William John",
                            Specialty = "Pediatrician"
                        },
                        new
                        {
                            DoctorID = 5,
                            Email = "amar.micheal@email.com",
                            Name = "Amar Micheal",
                            Specialty = "Dermatologist"
                        },
                        new
                        {
                            DoctorID = 6,
                            Email = "tom.hood@email.com",
                            Name = "Tom Hood",
                            Specialty = "Gynecologist"
                        },
                        new
                        {
                            DoctorID = 7,
                            Email = "joni.bob@email.com",
                            Name = "Joni Bob",
                            Specialty = "Ophthalmologist"
                        },
                        new
                        {
                            DoctorID = 8,
                            Email = "sarah.johnson@example.com",
                            Name = "Sarah Johnson",
                            Specialty = "Pediatrician"
                        },
                        new
                        {
                            DoctorID = 9,
                            Email = "michael.smith@example.com",
                            Name = "Michael Smith",
                            Specialty = "Cardiologist"
                        },
                        new
                        {
                            DoctorID = 10,
                            Email = "emily.davis@example.com",
                            Name = "Emily Davis",
                            Specialty = "Dermatologist"
                        },
                        new
                        {
                            DoctorID = 11,
                            Email = "david.brown@example.com",
                            Name = "David Brown",
                            Specialty = "Orthopedic Surgeon"
                        },
                        new
                        {
                            DoctorID = 12,
                            Email = "jessica.wilson@example.com",
                            Name = "Jessica Wilson",
                            Specialty = "Neurologist"
                        },
                        new
                        {
                            DoctorID = 13,
                            Email = "laura.martinez@example.com",
                            Name = "Laura Martinez",
                            Specialty = "General Practitioner"
                        },
                        new
                        {
                            DoctorID = 14,
                            Email = "daniel.anderson@example.com",
                            Name = "Daniel Anderson",
                            Specialty = "Endocrinologist"
                        },
                        new
                        {
                            DoctorID = 15,
                            Email = "olivia.thomas@example.com",
                            Name = "Olivia Thomas",
                            Specialty = "Gynecologist"
                        });
                });

            modelBuilder.Entity("WorldCareCenter.Api.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientID")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoiceID");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            InvoiceID = 1,
                            Date = new DateOnly(2023, 1, 3),
                            InvoiceAmount = 180m,
                            PatientID = 1
                        },
                        new
                        {
                            InvoiceID = 2,
                            Date = new DateOnly(2024, 2, 13),
                            InvoiceAmount = 500m,
                            PatientID = 2
                        },
                        new
                        {
                            InvoiceID = 3,
                            Date = new DateOnly(2024, 6, 2),
                            InvoiceAmount = 240m,
                            PatientID = 3
                        },
                        new
                        {
                            InvoiceID = 4,
                            Date = new DateOnly(2024, 7, 16),
                            InvoiceAmount = 620m,
                            PatientID = 4
                        },
                        new
                        {
                            InvoiceID = 5,
                            Date = new DateOnly(2024, 5, 14),
                            InvoiceAmount = 146m,
                            PatientID = 5
                        });
                });

            modelBuilder.Entity("WorldCareCenter.Api.Entities.InvoiceDetail", b =>
                {
                    b.Property<int>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InvoiceLineItem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InvoiceDetailId");

                    b.ToTable("InvoiceDetails");

                    b.HasData(
                        new
                        {
                            InvoiceDetailId = 1,
                            InvoiceId = 1,
                            InvoiceLineItem = "Three Item"
                        },
                        new
                        {
                            InvoiceDetailId = 2,
                            InvoiceId = 1,
                            InvoiceLineItem = "Mid Item"
                        },
                        new
                        {
                            InvoiceDetailId = 3,
                            InvoiceId = 2,
                            InvoiceLineItem = "Top Item"
                        },
                        new
                        {
                            InvoiceDetailId = 4,
                            InvoiceId = 3,
                            InvoiceLineItem = "Medicine Item"
                        },
                        new
                        {
                            InvoiceDetailId = 5,
                            InvoiceId = 4,
                            InvoiceLineItem = "Item 1"
                        },
                        new
                        {
                            InvoiceDetailId = 6,
                            InvoiceId = 5,
                            InvoiceLineItem = "Planning Item"
                        },
                        new
                        {
                            InvoiceDetailId = 7,
                            InvoiceId = 2,
                            InvoiceLineItem = "Two 2 Item"
                        },
                        new
                        {
                            InvoiceDetailId = 8,
                            InvoiceId = 3,
                            InvoiceLineItem = "13th Item"
                        });
                });

            modelBuilder.Entity("WorldCareCenter.Api.Entities.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientFileNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PatientID");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientID = 1,
                            Email = "joseph.hall@example.com",
                            Gender = "Male",
                            PatientFileNo = "951-522",
                            PatientName = "Joseph Hall"
                        },
                        new
                        {
                            PatientID = 2,
                            Email = "thomas.scott@example.com",
                            Gender = "Male",
                            PatientFileNo = "951-497",
                            PatientName = "Thomas Scott"
                        },
                        new
                        {
                            PatientID = 3,
                            Email = "barbara.green@example.com",
                            Gender = "Female",
                            PatientFileNo = "147-404",
                            PatientName = "Barbara Green"
                        },
                        new
                        {
                            PatientID = 4,
                            Email = "jennifer.white@example.com",
                            Gender = "Female",
                            PatientFileNo = "741-314",
                            PatientName = "Jennifer White"
                        },
                        new
                        {
                            PatientID = 5,
                            Email = "jessica.taylor@example.com",
                            Gender = "Female",
                            PatientFileNo = "256-024",
                            PatientName = "Jessica Taylor"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
